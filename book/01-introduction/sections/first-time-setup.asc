[[_first_time]]
=== Configurant Git per primera vegada

Ara que tens Git al teu sistema voldràs fer algunes coses per a personalitzar el teu entorn de Git.
Hauras de fer aquesta configuració només una vegada al teu ordinador, i es mantindran entre actualitzacions.
També pots canviar-ho tornant a executar les mateixes ordres una altra vegada.

Git porta una eina anomenada `git config` que et permet obtindre i establir les variables de configuracio que controlen l'aspecte i funcionament de Git.(((git commands, config)))
Aquestes variables poden emmagatzemarse en tres diferents llocs:

1. Arxiu `/etc/gitconfig`: conté els valor de cada usuari al sistema i els seus repositoris.
Si passes les opcions `--system` a `git config` llig i escriu especificament  en aquest arxiu.
2. L'arxiu `~/.gitconfig` o `~/.config/git/config`: és específic del teu usuari.
Pots fer que Git llisca o escriga específicament a aquest arxiu passant l'opció `--global`.
3. L'arxiu `config` al directori de Git o qualsevol repositori que estigues usant actualment:
És específic d'aquest repositori.

Cada nivell sobreescriu els valors del nivell anterior, així que els valors al arxiu `.git/config` sobrescriuen els de l'arxiu `/etc/gitconfig`.

En sistemes Windows, Git busca l'arxiu `.gitconfig` `.gitconfig` al directori `$HOME` (`C:\Users\$USER` per al a majoria).
A més, busca l'arxiu `/etc/gitconfig`, encara que és relatiu a l'arrel MSys, la qual és on decideixes instalar Git al teu sisteama Windows quan llances l'instalador.
Si estàs usant la versió 2.x o posterior de Git per a Windows, també hi ha un arxiu de configuració a nivell de sistema en `C:\Documents and Settings\All Users\Application Data\Git\config` en Windows XP, i en `C:\ProgramData\Git\config` en Windows Vista o nous.
Aquest arxiu de configuració només pot ser canviat com admininistrador per l'ordre `git config -f <file>`.

==== La teva identitat

La primera cosa que deus fer quan instal·les Git es establir el teu nom d'usuari i l'adreça del teu correu electrònic.
Això es importante perque cada confirmació (commit) de Git usa aquesta informació, i és introduida de manera immutable als commits que envies:

[source,console]
----
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
----

Una altra vegada, necessites fer-ho una vegada si passes l'opció `--global`perque Git sempre usa aquesta informació per qualsevol cosa que facis en aquest sistema.
Si vols sobrescriure aquesta configuració amb un nom o correu electrònic per projectes específics pots usar l'ordre sense l'opció `--global` quan et trovis en aquest projecte.

La majoria de les eines GUI t'ajudaran a fer-ho quan les executes per primera vegada.

==== El teu editor

Una vegada que la teva identitat està configurada, pots configurar el editor de text per defecte que Git usarà quan necesites introduir un missatge.
Sinó, Git usarà el editor del sistema per defecte.

Si vols usar un editor de text diferent, com Emacs, pots fer el següent:

[source,console]
----
$ git config --global core.editor emacs
----

Mentre a sistems de Windows, si vols usar un editor de text diferent, com Notepad++, pots fer el següent:

En un sistema x86
[source,console]
----
$ git config --global core.editor "'C:/Program Files/Notepad++/notepad++.exe' -multiInst -nosession"
----
En un sistema x64
[source,console]
----
$ git config --global core.editor "'C:/Program Files (x86)/Notepad++/notepad++.exe' -multiInst -nosession"
----

[NOTE]
====
Vim, Emacs i Notepad++ són editors de text popular que són usats per els desenvolupadors molt sovint en sistemes basats en Unix com Linux o OS X o en sistemes Windows.
Si no està familiaritzat amb qualsevol d'aquests editors, pots necessitar buscar les instruccions específiues de com establir el teu editor preferit amb Git.
====

[WARNING]
====
Pots buscar, si no vols configurar un editor com aquest, pot ser que et confonguís quan els executes.
Per exemple en un sistema de Windows pot incluïr una operació acabada prematurament durant una edició de Git iniciada.
====

==== Comprovar la configuració

Si vols comprovar la teva configuració, pot usar l'ordre `git config --list` per a llistar tota la configuració que Git pot trovar en aquest punt:

[source,console]
----
$ git config --list
user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
----

Pots vore claus ,és d'una vegada, perque Git llig la mateixa clau de diferents arxius (`/etc/gitconfig` i `~/.gitconfig`, per exemple).
En aquest cas, Git usa l'última valor per a cada clau única que veu.

També pots comprovar que clau utilitzarà Git per a una clau específica executant `git config <key>`:(((git commands, config)))

[source,console]
----
$ git config user.name
John Doe
----

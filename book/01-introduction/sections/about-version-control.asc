=== Sobre el Control de Versions

(((version control)))
Què és el "control de versions", i per què ens ha d'importar?
El control de versions és un sistema que registra els canvis en un o diversos arxius al llarg del temps, així podem recuperar versions específiques més avant.
Per exemple, en aquest llibre s'usa codi font registrant els arxius amb una eina de control de versions, encara que pot fer-se en qualsevol tipus d'arxiu a un ordinador.

Si som un dissenyador web o gràfic i volem mantenir cada versió d'una imatge o disseny (i de segur que vols), és molt aconsellable usar un Sistema de Control de Versions (VCS).
Ens permet revertir els arxius a un estat anterior, revertir el projecte sencer a un estat anterior, comparar canvis al llarg del temps, veure qui ha modificat ho ha modificat i que pot causar un problema, qui ha introduït un problema i quan, i molt més.
Usar un VCS també significa que, si perds coses, pots recuperar-les fàcilment.
A més, ho aconseguim a canvi de molt poc.

==== Sistemes de Control de Versions Local

(((version control,local)))
Per a molta gent, el mètode d'elecció de control de versions, és copiar arxius a un altre directori (pot ser un directori amb data i hora, si són gent intel·ligent).
Aquest mètode és molt comú, ja que és molt senzill, però també és molt propens a errors.
És fàcil oblidar el directori al qual està i accidentalment escriure a l'arxiu equivocat o copiar sobre arxius que no vols.

Per tractar aquest problema, els programadors van desenvolupar el VCS local que simplement tenia una base de dades que guardava tots els canvis baix un control de revisió.

.Control de versió local.
image::images/local.png[Local version control diagram]

Una de les eines de VCS més populars era el sistema RCS, que encara es distribueix a molts ordinadors.
Fins i tot el sistema operatiu Mac OS X inclou la comanda `rcs` quan instal·les Eines de Desenvolupador.
RCS funciona registrant conjunts de pegats (és a dir, les diferències entre els arxius) en un format especial en el disc i pot tornar a crear els arxius com eren abans mitjançant la suma de tots els pegats.

==== Sistemes centralitzats de control de versions

(((version control,centralized)))
El següent problema més important és que la gent necessita col·laborar amb altres desenvolupadors a altres sistemes.
Per a tractar aquest problema, es va desenvolupar els Sistemes Centralitzats de Control (CVCSs) de Versions
Aquests sistemes, com CVS, Subversion i Perforce tenen un únic servidor que conté tots els arxius versionats, i els clients descarreguen els arxius des d'aquest lloc.
Aquest, ha estat l'estàndard durant anys.

.Control de versions centralitzat.
image::images/centralized.png[Centralized version control diagram]

Aquest control de versions ofereix molts avantatges respecte dels VCSs locals.
Per exemple, tots saben més o menys que estan fent els altres al projecte.
Els administradors tenen un control precís sobre qui el que pot fer cadascú i és molt més fàcil administrar un CVCS que la base de dades local de cada client.



No obstant això, aquesta configuració també té alguns desavantatges greus.
La més òbvia és el punt únic de fallada que el servidor centralitzat representa.
Si aquest servidor deixa de funcionar durant una hora, llavors ningú podrà col·laborar o registrar canvis versionats de cap arxiu que estan treballant.
Si el disc dur de la base de dades central es corromp, i no s'han fet còpies de seguretat, ho perdem tot - la història sencera del projecte excepte instàncies que la gent tingui en les seves màquines locals.
Els sistemes locals de VCS tenen aquest mateix problema - si tenim tota la història del projecte en un únic lloc, correm el risc de pedre-ho tot.

==== Sistemes de control de versions distribuït

(((version control,distributed)))
Ací és on els sistemes de Control de versions distribuïts (DVCSs) passen a l'acció.
A un DVCS (com Git, Mercurial Bazaar o Darcs), els clients no descarreguen només les últimes instàncies dels arxius sinó una còpia sencera del repositori.
Així, si un servidor deixa de funcionar i aquests sistemes estaven col·laborant a través d'ell, algun dels repositoris dels clients pot ser copiat per a restaurar el servidor.
Cada clonació és realment una còpia sencera de totes les dades.

.Control de versions distribuït.
image::images/distributed.png[Distributed version control diagram]

A més, molts d'aquests sistemes tracten perfectament tindre més d'un repositori remot al qual poder treballar, així es pot col·laborar al mateix projecte amb diferents grups de gent de diferents maneres i a la vegada.
Açò, permet configurar diversos tipus de fluxos de treball que no serien possibles en sistemes centralitzats, com a models jeràrquics.
